import java.util.regex.Pattern;

public class Validator
{
    /**
     * \s* - Могут быть пробелы от нуля до много раз)
     * (\"[^\"]{1,10}\") - Запоминает слово (от одного до десяти символов кроме кавычек)
     *      () - Внутри запомнено и выдано в матчере
     *      \" - Заэкранированный символ кавычек
     *      [^...] - любой символ кроме указанных(любой символ кроме кавычки)
     *      ...{a,b} - Предыдущая часть встречается не менее А раз и не более В раз
     * \s* Могут быть пробелы от нуля до много раз)
     * ([-+/*]) - Запоминаем попавшийся арифметический оператор
     *      [...] - любой символ из указанных(арифметические операции)
     * \s* Могут быть пробелы от нуля до много раз)
     * (\"[^\"]{1,10}\"|[1-9]|10) - Запоминает любой из вариантов строка из одного - десяти символов либо числа от 1 до 10
     *      Qwe|asd|zxc - Совпадает с любым из указанных кусков
     *      \"[^\"]{1,10}\" -  Запоминает слово (от одного до десяти символов кроме кавычек) или ...
     *      [1-9] любая цифра от одного до девяти или
     *      10 - десять
     *      (?:[1-9]|10)) - (?:) - Незапоминающая группа
     * \s* Могут быть пробелы от нуля до много раз)
     *
     */
    private static final Pattern p = Pattern.compile("\s*(\"[^\"]{1,10}\")\s*([-+]\s*\"[^\"]{1,10}\"|[*/]\s*(?:[1-9]|10))\s*");
    public static void validate(String input)
    {
        if (!p.matcher(input).matches())
        {
            throw new IllegalArgumentException("Некорректная входная строка");
        }
    }
}
